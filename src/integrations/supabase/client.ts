
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qgsabaicokoynabxgdco.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFnc2FiYWljb2tveW5hYnhnZGNvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0OTIxNDEsImV4cCI6MjA2MDA2ODE0MX0._75NHot8gMmOcXQ88P1fqo8gyPK2FcV2g3ppmH_EFLA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to check if both the tcgplayer_product_id migration and card number extraction have completed
export const checkProductIdMigration = async () => {
  try {
    // First check for tcgplayer_product_id column in unified_products
    const { error: columnError } = await supabase
      .from('unified_products')
      .select('tcgplayer_product_id')
      .limit(1);
    
    if (columnError) {
      console.error('Failed to check tcgplayer_product_id column:', columnError);
      return false;
    }

    // Then check if card numbers are properly populated in the cards table
    const { data: cardsWithNumbers, error: cardsError } = await supabase
      .from('cards')
      .select('card_number')
      .not('card_number', 'is', null)
      .limit(5);
    
    if (cardsError) {
      console.error('Failed to check card numbers in cards table:', cardsError);
      return false;
    }
    
    const hasCardNumbers = cardsWithNumbers && cardsWithNumbers.length > 0;
    
    console.log(`Migration check: ${hasCardNumbers ? 'Card numbers present' : 'Card numbers missing'}`);
    console.log(`Found ${cardsWithNumbers?.length || 0} cards with numbers in sample`);
    
    // If both checks passed, the migration is complete
    return !columnError && hasCardNumbers;
  } catch (e) {
    console.error('Migration check failed:', e);
    return false;
  }
};
